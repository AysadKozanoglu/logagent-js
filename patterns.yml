# 
# PARSER DEFINITIONS FILE IN YML FORMAT
#
# Please use 'ts' for dates and time
# RegexTools: https://regex101.com/#javascript
patterns:
- # REDIS
  type: redis
  # name of the docker image
  sourceName: !!js/regexp /redis/
  # Example for automatic pattern test while loading
  example: "1:M 22 Jul 21:58:28.146 # Server started, Redis version 3.0.2"
  match: 
    - regex: !!js/regexp /(\d+\:\w)\s(\d\d\s\w+.+)\s\W\s(.*)/i
      fields:  [pid,ts,message]
    - regex: !!js/regexp /(.*)/i
      fields: message

- #  Web Logs
  sourceName: !!js/regexp /httpd|access_log|apache2|nginx/
  match: 
    # Common Log Format
    - regex:        !!js/regexp /([0-9a-f.:]+)\s+(-|.+?)\s+(-|.+?)\s+\[([0-9]{2}\/[a-z]{3}\/[0-9]{4}\:[0-9]{2}:[0-9]{2}:[0-9]{2}[^\]]*)\] \"(\S+?)\s(\S*?)\s{0,1}(\S+?)\" ([0-9|\-]+) ([0-9|\-]+)/i
      type: access_common
      fields:       [client_ip,remote_id,user,ts,method,path,http_version,status_code,size]
      dateFormat: DD/MMM/YYYY:HH:mm:ss ZZ
      transform: !!js/function >
        function (p) {
          p.message = p.method + ' ' + p.path
        }

    - type: access_log_combined
      regex: !!js/regexp /([0-9a-f.:]+)\s(-|\S+)\s(-|\S+)\s\[([0-9]{2}\/[a-z]{3}\/[0-9]{4}\:[0-9]{2}:[0-9]{2}:[0-9]{2}[^\]]*)\] \"(\w+)\s(.*)\" ([0-9|\-]+) ([0-9|\-]+) \"([^\"]+)\" \"([^\"]+)\"/i
      fields: [client_ip,remote_id,user,'ts',method,path,status_code,size,referer,user_agent]
      dateFormat: DD/MMM/YYYY:HH:mm:ss ZZ
    
    - type: nginx_error_log 
      regex: !!js/regexp /(\d{4}\/\d{2}\/\d{2}\s[\d|\:]+)\s\[(.+?)]\s(\d+)#(\d+)\:\s(.*)/
      fields: [ts,level,pid,tid,message]
      dateformat: YYYY/MM/DD HH:mm:ss

    - type: apache_error_log
      regex: !!js/regexp /\[(\w{3} \w{3} \d{2} [\d|\:]+\s\d+)\] \[(.+?)\] \[client ([\d|\.]+)\] (.+)/
      fields: [ts,level,client_ip,message]
      dateformat: ddd MMM DD hh:mm:ss.SSS YYYY
       
    # Apache MPM events
    - regex: !!js/regexp \[(.+?)\]\s+\[(.+?)\]\s+\[(.+?)\]\s+(.+)
      fields: [ts,event_type,processInfo,message]
      type: apache_mpm
      dateformat: ddd MMM DD hh:mm:ss.SSS YYYY

- # mysql
  # 2015-07-25 14:11:35 0 [Note] mysqld (mysqld 5.6.26) starting as process 1 ...
  sourceName: !!js/regexp /mysql/ 
  match: 
    - regex: (.+)\s(\d+)\s\[(.+?)\]\s+(.*)
      fields: [ts,pid,level,message]
      dateFormat: YYYY-MM-DD HH:mm:ss

- # timestamped messages from /var/log/*.log on Mac OS X
  sourceName: !!js/regexp /\.log/ # catch all .log files  
  match:
    -
      type: system_log
      regex: !!js/regexp /([\w|\s]+\s\d{2}\s[\d|\:]+)\s(.+?)\s(.+?)\s<(.+)>(.*)/
      fields: [ts,host,service,level,message]
      dateFormat: MMM DD HH:mm:ss
    -
      type: system_log
      regex: !!js/regexp /([\w|\s]+\s\d{2}\s[\d|\:]+)\s(\S+)\s(\S+)\[(\d+)\]\:\s(.+)/
      fields: [ts,host,service,pid,message]
      dateFormat: MMM DD HH:mm:ss
    - 
      type: log
      regex: !!js/regexp /([\w|\s]+\s\d{2}\s[\d|\:|\.]+)\s+(<.+?>)\s(.*)/
      fields: [ts,service,message]
      dateFormat: MMM DD HH:mm:ss
    - # 2015-07-27 10:42:02 +0000: /Library/Server/Web/Config/apache2/getsslpassphrase: Found wildcard site for port 443
      type: log
      regex: !!js/regexp /(\d{4}[\-|\d{2}]+\s[\d|\:]+\s\+\d{4})\:\s+(.+)/
      fields: [ts,message]
      dateFormat: YYYY-MM-DD HH:mm:ss ZZ
     

dateFormats: [
    'DD/MMM/YYYY:HH:mm:ss ZZ', #apache
    'DD MMM HH:mm:ss.S',
    'DD MMM HH:mm:ss',
    'DDD MMM DD HH:mm:ss',
    'YYYY-MM-DD',
    'YYYY-MM-DD HH:mm',
    'YYYY-MM-DDTHH:mm',
    'YYYY-MM-DD HHmm',
    'YYYYMMDD HH:mm',
    'YYYYMMDD HHmm',
    'YYYYMMDD',
    'YYYY-MM-DDTHHmm',
    'YYYYMMDDTHH:mm',
    'YYYYMMDDTHHmm',
    'YYYYMMDDTHH:mm',
    'YYYY-MM-DD HH:mm:ss',
    'YYYY-MM-DD HHmmss',
    'YYYY-MM-DDTHH:mm:ss',
    'YYYY-MM-DDTHHmmss',
    'YYYYMMDDTHHmmss',
    'YYYY-MM-DD HH:mmZ',
    'YYYY-MM-DD HHmmZ',
    'YYYY-MM-DD HH:mm:ssZ',
    'YYYY-MM-DD HHmmssZ',
    'YYYYMMDD HH:mmZ',
    'YYYYMMDD HHmmZ',
    'YYYY-MM-DDTHH:mmZ',
    'YYYY-MM-DDTHHmmZ',
    'YYYY-MM-DDTHH:mm:ssZ',
    'YYYY-MM-DDTHHmmssZ',
    'YYYYMMDDTHH:mmZ',
    'YYYYMMDDTHHmmZ',
    'YYYYMMDDTHHmmZ',
    'YYYYMMDDTHHmmssZ',
    'YYYYMMDDTHH:mmZ'
  ]
